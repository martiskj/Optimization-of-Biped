%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 10 Home.
%%Title: .\hopper_dc_result.eps
%%CreationDate: 06/07/2016  16:35:18
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    72   146   508   712
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    72   146   508   712
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0540 8832 csm

  331   288  5229  6784 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6054 7565 rf
6 w
0 2581 4691 0 0 -2581 787 3148 4 MP
PP
-4691 0 0 2581 4691 0 0 -2581 787 3148 5 MP stroke
4 w
DO
0 sg
 787 3148 mt  787  567 L
 787  567 mt  787  567 L
1568 3148 mt 1568  567 L
1568  567 mt 1568  567 L
2350 3148 mt 2350  567 L
2350  567 mt 2350  567 L
3132 3148 mt 3132  567 L
3132  567 mt 3132  567 L
3914 3148 mt 3914  567 L
3914  567 mt 3914  567 L
4696 3148 mt 4696  567 L
4696  567 mt 4696  567 L
5478 3148 mt 5478  567 L
5478  567 mt 5478  567 L
 787 3148 mt 5478 3148 L
5478 3148 mt 5478 3148 L
 787 2825 mt 5478 2825 L
5478 2825 mt 5478 2825 L
 787 2502 mt 5478 2502 L
5478 2502 mt 5478 2502 L
 787 2180 mt 5478 2180 L
5478 2180 mt 5478 2180 L
 787 1857 mt 5478 1857 L
5478 1857 mt 5478 1857 L
 787 1534 mt 5478 1534 L
5478 1534 mt 5478 1534 L
 787 1212 mt 5478 1212 L
5478 1212 mt 5478 1212 L
 787  889 mt 5478  889 L
5478  889 mt 5478  889 L
 787  567 mt 5478  567 L
5478  567 mt 5478  567 L
SO
6 w
 787  567 mt 5478  567 L
 787 3148 mt 5478 3148 L
5478 3148 mt 5478  567 L
 787 3148 mt  787  567 L
 787 3148 mt 5478 3148 L
 787 3148 mt  787  567 L
 787 3148 mt  787 3101 L
 787  567 mt  787  613 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 754 3293 mt 
(0) s
1568 3148 mt 1568 3101 L
1568  567 mt 1568  613 L
1485 3293 mt 
(0.5) s
2350 3148 mt 2350 3101 L
2350  567 mt 2350  613 L
2317 3293 mt 
(1) s
3132 3148 mt 3132 3101 L
3132  567 mt 3132  613 L
3049 3293 mt 
(1.5) s
3914 3148 mt 3914 3101 L
3914  567 mt 3914  613 L
3881 3293 mt 
(2) s
4696 3148 mt 4696 3101 L
4696  567 mt 4696  613 L
4613 3293 mt 
(2.5) s
5478 3148 mt 5478 3101 L
5478  567 mt 5478  613 L
5445 3293 mt 
(3) s
 787 3148 mt  833 3148 L
5478 3148 mt 5431 3148 L
 616 3192 mt 
(-2) s
 787 2825 mt  833 2825 L
5478 2825 mt 5431 2825 L
 686 2869 mt 
(0) s
 787 2502 mt  833 2502 L
5478 2502 mt 5431 2502 L
 686 2546 mt 
(2) s
 787 2180 mt  833 2180 L
5478 2180 mt 5431 2180 L
 686 2224 mt 
(4) s
 787 1857 mt  833 1857 L
5478 1857 mt 5431 1857 L
 686 1901 mt 
(6) s
 787 1534 mt  833 1534 L
5478 1534 mt 5431 1534 L
 686 1578 mt 
(8) s
 787 1212 mt  833 1212 L
5478 1212 mt 5431 1212 L
 619 1256 mt 
(10) s
 787  889 mt  833  889 L
5478  889 mt 5431  889 L
 619  933 mt 
(12) s
 787  567 mt  833  567 L
5478  567 mt 5431  567 L
 619  611 mt 
(14) s
 787  567 mt 5478  567 L
 787 3148 mt 5478 3148 L
5478 3148 mt 5478  567 L
 787 3148 mt  787  567 L
gs 787 567 4692 2582 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
96 -42 96 -48 96 -54 95 -60 96 -65 96 -72 96 -78 95 -84 
96 -89 96 -96 96 -101 95 -107 96 -114 96 -119 96 -125 95 -131 
96 -137 96 -141 95 -133 96 -103 96 -50 96 13 95 73 96 118 
96 139 96 139 95 134 96 127 96 122 96 116 95 109 96 104 
96 98 95 92 96 86 96 80 96 74 95 68 96 63 96 56 
96 51 95 44 96 39 96 32 96 27 95 21 96 14 96 9 
95 3 787 774 50 MP stroke
gr

c8
0 sg
2998 3436 mt 
(Time) s
 534 2068 mt  -90 rotate
(Position) s
90 rotate
2437  472 mt 
(Optimal trajectory position) s
1 sg
0 2581 4691 0 0 -2581 787 6732 4 MP
PP
-4691 0 0 2581 4691 0 0 -2581 787 6732 5 MP stroke
4 w
DO
0 sg
 787 6732 mt  787 4151 L
 787 4151 mt  787 4151 L
1568 6732 mt 1568 4151 L
1568 4151 mt 1568 4151 L
2350 6732 mt 2350 4151 L
2350 4151 mt 2350 4151 L
3132 6732 mt 3132 4151 L
3132 4151 mt 3132 4151 L
3914 6732 mt 3914 4151 L
3914 4151 mt 3914 4151 L
4696 6732 mt 4696 4151 L
4696 4151 mt 4696 4151 L
5478 6732 mt 5478 4151 L
5478 4151 mt 5478 4151 L
 787 6732 mt 5478 6732 L
5478 6732 mt 5478 6732 L
 787 6301 mt 5478 6301 L
5478 6301 mt 5478 6301 L
 787 5871 mt 5478 5871 L
5478 5871 mt 5478 5871 L
 787 5441 mt 5478 5441 L
5478 5441 mt 5478 5441 L
 787 5011 mt 5478 5011 L
5478 5011 mt 5478 5011 L
 787 4581 mt 5478 4581 L
5478 4581 mt 5478 4581 L
 787 4151 mt 5478 4151 L
5478 4151 mt 5478 4151 L
SO
6 w
 787 4151 mt 5478 4151 L
 787 6732 mt 5478 6732 L
5478 6732 mt 5478 4151 L
 787 6732 mt  787 4151 L
 787 6732 mt 5478 6732 L
 787 6732 mt  787 4151 L
 787 6732 mt  787 6685 L
 787 4151 mt  787 4197 L
 754 6877 mt 
(0) s
1568 6732 mt 1568 6685 L
1568 4151 mt 1568 4197 L
1485 6877 mt 
(0.5) s
2350 6732 mt 2350 6685 L
2350 4151 mt 2350 4197 L
2317 6877 mt 
(1) s
3132 6732 mt 3132 6685 L
3132 4151 mt 3132 4197 L
3049 6877 mt 
(1.5) s
3914 6732 mt 3914 6685 L
3914 4151 mt 3914 4197 L
3881 6877 mt 
(2) s
4696 6732 mt 4696 6685 L
4696 4151 mt 4696 4197 L
4613 6877 mt 
(2.5) s
5478 6732 mt 5478 6685 L
5478 4151 mt 5478 4197 L
5445 6877 mt 
(3) s
 787 6732 mt  833 6732 L
5478 6732 mt 5431 6732 L
 549 6776 mt 
(-15) s
 787 6301 mt  833 6301 L
5478 6301 mt 5431 6301 L
 549 6345 mt 
(-10) s
 787 5871 mt  833 5871 L
5478 5871 mt 5431 5871 L
 616 5915 mt 
(-5) s
 787 5441 mt  833 5441 L
5478 5441 mt 5431 5441 L
 686 5485 mt 
(0) s
 787 5011 mt  833 5011 L
5478 5011 mt 5431 5011 L
 686 5055 mt 
(5) s
 787 4581 mt  833 4581 L
5478 4581 mt 5431 4581 L
 619 4625 mt 
(10) s
 787 4151 mt  833 4151 L
5478 4151 mt 5431 4151 L
 619 4195 mt 
(15) s
 787 4151 mt 5478 4151 L
 787 6732 mt 5478 6732 L
5478 6732 mt 5478 4151 L
 787 6732 mt  787 4151 L
gs 787 4151 4692 2582 rc
c8
96 52 96 51 96 52 95 52 96 51 96 52 96 52 95 51 
96 52 96 52 96 51 95 52 96 52 96 51 96 52 95 52 
96 51 96 16 95 -151 96 -382 96 -531 96 -568 95 -483 96 -296 
96 -64 96 52 95 51 96 52 96 52 96 51 95 52 96 52 
96 51 95 52 96 52 96 51 96 52 95 52 96 51 96 52 
96 52 95 51 96 52 96 52 96 51 95 52 96 52 96 51 
95 52 787 5441 50 MP stroke
gr

c8
0 sg
2998 7020 mt 
(Time) s
 467 5647 mt  -90 rotate
(Velocity) s
90 rotate
2445 4056 mt 
(Optimal trajectory velocity) s

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
